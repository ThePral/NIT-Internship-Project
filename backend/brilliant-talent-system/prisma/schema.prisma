// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  hash_password String
  firstname String
  lastname String

  points Int

  Student_Priorities Student_Priority[]
  @@map("users")
}

model University {
  id Int @id @default(autoincrement())
  name String
  grade Int

  @@map("universities")
}

model Minor {
  id Int @id @default(autoincrement())
  name String @unique
  req String
  capacity Int

  Student_Priority Student_Priority[]
  @@map("minors")
}

model Student_Priority {
  id Int @id @default(autoincrement())
  student_id Int
  minor_id Int
  priority Int
  is_accepted Boolean?

  student User @relation(fields: [student_id], references: [id], onDelete: Cascade)
  minor Minor @relation(fields: [minor_id], references: [id], onDelete: Cascade)

  @@map("Student_Priorities")
}

model Admin {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  hash_password String

  @@map("admins")
}

model SuperAdmin {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  hash_password String

  @@map("superAdmins")
}