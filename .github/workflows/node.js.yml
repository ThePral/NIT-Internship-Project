name: CI - NestJS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vilt_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/brilliant-talent-system/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: backend/brilliant-talent-system

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Set test env variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vilt_test" >> $GITHUB_ENV
          echo "JWT_SECRET=jwt-secret" >> $GITHUB_ENV

      # - name: Lint code
      #   run: npm run lint

      # - name: Run unit tests
      #   run: npm run test -- --ci --watch=false --coverage

      - name: Run e2e tests
        run: npm run test:e2e -- --ci --watch=false --coverage --coverageThreshold='{"global":{"branches":0,"functions":0,"lines":0,"statements":0}}'
        working-directory: backend/brilliant-talent-system
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/vilt_test
          JWT_SECRET: jwt-secret
          JWT_ACCESS_SECRET: "test-access-secret"
          JWT_REFRESH_SECRET: "test-refresh-secret"

      - name: Build project
        run: npm run build
        working-directory: backend/brilliant-talent-system
